version: '2'

services:
  cornelius:
    image: decisyon-dac-docker.jfrog.io/com.decisyon.cornelius:MATILDA-SNAPSHOT
    container_name: cornelius
#    env_file:
#      - ./cornelius_env.file
    environment:
      - spring.profiles.active=native
      - config.server.user.name=cornelius
      - config.server.user.password=cornelius
#appcomposer.property {copy,configure,none} 
# copy: legge i valori presenti nell'env del docker-compose.yml e li copia sul file /usr/src/cornelius/properties/appcomposer.properties
# configure: legge i valori presenti nell'env del docker-compose.yml effettua alcune modifiche
# none: utilizza la direttiva "volumes" e monta il file esterno nel path /usr/src/cornelius/properties/appcomposer.properties
      - appcomposer.properties=copy
      - appcomposer.properties.file.init=#Fri Nov 08 16:00:52 UTC 2019
      - appcomposer.properties.file.token.endpoint=http\://localhost\:8083/oauth/token
      - appcomposer.properties.file.redirect.uri=http\://192.168.102.209\:8080/index.cas
      - appcomposer.properties.file.user.info.endpoint=http\://localhost\:8083/Users
      - appcomposer.properties.file.oc.loginRedirectUri=http\://192.168.102.209\:8080/index.cas
      - appcomposer.properties.file.oc.checkTokenEndpoint=http\://192.168.102.209\:8083/introspect
      - appcomposer.properties.file.oc.userInfoEndpoint=http\://192.168.102.209\:8083/userinfo
      - appcomposer.properties.file.oc.jwkEndpoint=http\://192.168.102.209\:8083/token_keys
      - appcomposer.properties.file.check.token.endpoint=http\://localhost\:8083/check_token
      - appcomposer.properties.file.metadata.user=appcomposer
      - appcomposer.properties.file.authorization.endpoint=http\://localhost\:8083/oauth/authorize
      - appcomposer.properties.file.metadata.driver=org.postgresql.Driver
      - appcomposer.properties.file.metadata.url=jdbc\:postgresql\://postgresql\:5432/appcomposer?currentSchema\=appcomposer
      - appcomposer.properties.file.service.metadata.name=metadata
      - appcomposer.properties.file.metadata.port=5432
      - appcomposer.properties.file.metadata.schema=appcomposer
      - appcomposer.properties.file.client.secret=appcomposer
      - appcomposer.properties.file.oc.userIdentifierClaim=sub
      - appcomposer.properties.file.client.id=appcomposer
      - appcomposer.properties.file.metadata.password=appcomposer
      - appcomposer.properties.file.oc.tokenEndpoint=http\://192.168.102.209\:8083/oauth/token
      - appcomposer.properties.file.metadata.database=appcomposer
      - appcomposer.properties.file.oc.logoutEndpoint=http\://192.168.102.209\:8083/logout.do
      - appcomposer.properties.file.service.openConnect.name=openConnect
      - appcomposer.properties.file.oc.authorizationEndpoint=http\://192.168.102.209\:8083/oauth/authorize
      - appcomposer.properties.file.metadata.host=postgresql
      - appcomposer.properties.file.uaa.url=http\://192.168.102.209:8083
      - appcomposer.properties.file.keymaster.url=http\://localhost:8080
    volumes:
      - "./appcomposer.properties:/usr/src/cornelius/properties/appcomposer.properties"
    ports:
      - "8888:8888"

  appcomposer:
    image: decisyon-dac-docker.jfrog.io/com.decisyon.appcomposer-home:JAKE.1-SNAPSHOT
    container_name: appcomposer
    depends_on:
      - "cornelius"
    command: ["wait-for-it.sh", "cornelius:8888/actuator/healtz", "--timeout=60", "-q", "--", "start.sh" ]
#    env_file:
#      - ./appcomposer_env.file
    environment:
      - spring.profiles.active=test
      - config.server.host=cornelius
      - config.server.port=8888
      - config.server.user.name=cornelius
      - config.server.user.password=cornelius
      - appcomposer.caramel.enabled=true 
    ports:
      - "8080:8080"

  caramel:
    image: decisyon-dac-docker.jfrog.io/com.decisyon.caramel:JAKE-SNAPSHOT
    container_name: caramel
#    env_file:
#      - ./caramel_env.file
    environment:
      REDIRECT_URI: http://192.168.102.209:8080/index.cas
      LOGOUT_REDIRECT_URI: http://192.168.102.209:8080/
      ZONE_ID: 192.168.102.209
      APPCOMPOSER_CLIENT_PWD: appcomposer
      APPCOMPOSER_CLIENT_ID: appcomposer
      ADMINISTRATOR_USERNAME: administrator
      ADMINISTRATOR_PWD: Administrator
      db_scheme: postgresql
      db_username: caramel
      db_password: caramel
      db_host: postgresql
      db_port: 5432
      db_name: caramel
    ports:
      - "8083:8080"

  postgresql:
    image: decisyon-docker.jfrog.io/dac-postgres-9.6:v0.3
    container_name: postgresql_j
    environment:
      POSTGRES_PASSWORD: Latina,1
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      DCY_DBNAME: appcomposer
      DCY_USER: appcomposer
      DCY_PASSWORD: appcomposer
      DCY_CARAMEL_USER: caramel
      DCY_CARAMEL_PASSWORD: caramel
      DCY_CARAMEL_DBNAME: caramel
      CHECK_DB: check_db
    volumes:
     - postgresdata:/var/lib/postgresql/data
    ports:
     - "5432:5432"

  pgadmin4:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_dac-doc_j
    environment:
      PGADMIN_DEFAULT_PASSWORD: Latina,1
      PGADMIN_DEFAULT_EMAIL: admin
    ports:
     - "8880:80"
     

  appcomposer-sqlserver:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: dacsqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Latina,1
    ports:
      - 1433:1433
      
      
volumes:
  postgresdata:
    driver: local
  
